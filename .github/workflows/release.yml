name: Release

on:
  release:
    types: [published]
  workflow_dispatch:
    inputs:
      version:
        description: 'Release version'
        required: true
        default: '1.0.0'

jobs:
  release:
    name: Release to Maven Central
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout code
      uses: actions/checkout@v4
      
    - name: Set up JDK 17 for publishing to Maven Central
      uses: actions/setup-java@v4
      with:
        java-version: 17
        distribution: 'temurin'
        cache: maven
        server-id: central
        server-username: MAVEN_CENTRAL_USERNAME
        server-password: MAVEN_CENTRAL_TOKEN
        
    - name: Cache Maven dependencies
      uses: actions/cache@v4
      with:
        path: ~/.m2/repository
        key: ${{ runner.os }}-maven-${{ hashFiles('**/pom.xml') }}
        restore-keys: |
          ${{ runner.os }}-maven-
          
    - name: Install Redis CLI
      run: |
        sudo apt-get update
        sudo apt-get install -y redis-tools
        
    - name: Get version from tag
      id: get_version
      run: |
        realversion="${GITHUB_REF/refs\/tags\/}"
        realversion="${realversion//v/}"
        echo "VERSION=$realversion" >> $GITHUB_OUTPUT
        
    - name: Update version in POM
      if: github.event_name == 'release'
      run: ./mvnw versions:set -DnewVersion=${{ steps.get_version.outputs.VERSION }}
      
    - name: Import GPG key
      if: github.event_name == 'release'  
      uses: crazy-max/ghaction-import-gpg@v6
      with:
        gpg_private_key: ${{ secrets.OSSH_GPG_SECRET_KEY }}
        passphrase: ${{ secrets.OSSH_GPG_SECRET_KEY_PASSWORD }}
        
    - name: Start FalkorDB
      run: |
        docker run -d --name falkordb -p 6379:6379 falkordb/falkordb:latest
        # Wait for FalkorDB to be ready
        echo "Waiting for FalkorDB to start..."
        timeout 60 bash -c 'until nc -z localhost 6379; do sleep 1; done'
        echo "FalkorDB is ready"
        
    - name: Run full test suite
      run: ./mvnw clean verify -B -Dcheckstyle.skip=true
      env:
        MAVEN_OPTS: -Xmx1024m
        
    - name: Build and deploy to Maven Central
      if: github.event_name == 'release'
      run: |
        ./mvnw --no-transfer-progress \
          --batch-mode \
          clean deploy -P release
      env:
        MAVEN_CENTRAL_USERNAME: ${{ secrets.CENTRAL_USERNAME }}
        MAVEN_CENTRAL_TOKEN: ${{ secrets.CENTRAL_TOKEN }}
        MAVEN_GPG_PASSPHRASE: ${{ secrets.OSSH_GPG_SECRET_KEY_PASSWORD }}
        
    - name: Build artifacts for workflow dispatch
      if: github.event_name == 'workflow_dispatch'
      run: ./mvnw clean package -DskipTests -B -P release
